{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Downloads\\\\admin-template\\\\src\\\\components\\\\login\\\\login.js\";\nimport React, { Component } from \"react\";\nimport Button from '../UI/button/button';\nimport { Inputs } from \"../UI/input/index\";\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      role: '',\n      inputs: [{\n        type: 'email',\n        name: 'email',\n        placeholder: 'E-mail',\n        required: [true],\n        label: '',\n        error: '',\n        error_class: ''\n      }, {\n        type: 'password',\n        name: 'password',\n        placeholder: 'Passowrd',\n        required: [true],\n        label: '',\n        error: '',\n        error_class: ''\n      }],\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    console.log(target.style);\n    this.setState({\n      [name]: value\n    }, () => {\n      this.validateField(name, value);\n    });\n  }\n\n  validateField(fieldName, value) {\n    let inputs = this.state.inputs;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        inputs[0].error = emailValid ? '' : ' Invalid E-mail';\n        inputs[0].error_class = emailValid ? '' : 'input-error';\n        break;\n\n      case 'password':\n        passwordValid = value.length >= 6;\n        inputs[1].error = passwordValid ? '' : 'Passowrd too short';\n        inputs[1].error_class = passwordValid ? '' : 'input-error';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      inputs: inputs,\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid && this.state.passwordValid\n    });\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    alert('Check Account Infos:\\nE-mail: ' + this.state.email + '\\nPassword: ' + this.state.password);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container sign-in-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"form-h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(Inputs, {\n      className: \"auth \",\n      onChange: this.handleInputChange,\n      inputs: this.state.inputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: this.props.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Forgot your password?\"), /*#__PURE__*/React.createElement(Button, {\n      label: \"Sign In\",\n      disabled: !this.state.formValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pc/Downloads/admin-template/src/components/login/login.js"],"names":["React","Component","Button","Inputs","Login","constructor","props","state","email","password","role","inputs","type","name","placeholder","required","label","error","error_class","emailValid","passwordValid","formValid","handleInputChange","bind","validateField","validateForm","handleFormSubmit","event","target","value","checked","console","log","style","setState","fieldName","match","length","preventDefault","alert","render","href"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from '../UI/button/button'\r\nimport { Inputs } from \"../UI/input/index\"\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      role: '',\r\n      inputs: [\r\n        { type: 'email', name: 'email', placeholder: 'E-mail', required: [true], label: '', error: '', error_class: ''},\r\n        { type: 'password', name: 'password', placeholder: 'Passowrd', required: [true], label: '', error: '', error_class: ''},\r\n      ],\r\n      emailValid: false,\r\n      passwordValid: false,\r\n      formValid: false,\r\n    }\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.validateField = this.validateField.bind(this)\r\n    this.validateForm = this.validateForm.bind(this)\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name; \r\n    \r\n    console.log(target.style)\r\n    this.setState({[name]: value}, \r\n        () => { this.validateField(name, value) });\r\n  }\r\n\r\n  validateField(fieldName, value) {\r\n    let inputs = this.state.inputs;\r\n    let emailValid = this.state.emailValid;\r\n    let passwordValid = this.state.passwordValid;\r\n  \r\n    switch(fieldName) {\r\n      case 'email':\r\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        inputs[0].error = emailValid ? '' : ' Invalid E-mail';\r\n        inputs[0].error_class = emailValid ? '' : 'input-error';\r\n        break;\r\n      case 'password':\r\n        passwordValid = value.length >= 6;\r\n        inputs[1].error = passwordValid ? '': 'Passowrd too short';\r\n        inputs[1].error_class = passwordValid ? '' : 'input-error';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({inputs: inputs,\r\n        emailValid: emailValid,\r\n        passwordValid: passwordValid\r\n      }, this.validateForm);\r\n  }\r\n\r\n  validateForm() {\r\n    this.setState({formValid: this.state.emailValid && this.state.passwordValid});\r\n  }\r\n\r\n  handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    alert('Check Account Infos:\\nE-mail: ' + \r\n           this.state.email+\r\n           '\\nPassword: '+\r\n           this.state.password);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n        <div className=\"form-container sign-in-container\">\r\n            <form onSubmit={ this.handleFormSubmit }>\r\n                <h1 className=\"form-h1\">Sign in</h1>\r\n                    <Inputs\r\n                        className = \"auth \"\r\n                        onChange = { this.handleInputChange }\r\n                        inputs = { this.state.inputs }\r\n                    />\r\n                    <a href={ this.props.href }>Forgot your password?</a>\r\n                    <Button label=\"Sign In\" disabled={!this.state.formValid} />\r\n            </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}